exit
exot
pp.save
pp.amount = 1
pp.amount
pp.class
pp.update_attributes({amount: amount})
pp.update(amount:amount)
pp.update_attributes!(amount:amount)
pp.save!
pp.amount = amount
pp
exit
CartsProduct.where(cart_id: cart_id, product_id: product_id).find_or_createxit
CartsProduct.where(cart_id: cart_id, product_id: product_id).find_or_create
CartsProduct.where(cart_id: cart_id, product_id: product_id).find_or_creat
CartsProduct.where(cart_id: cart_id, product_id: product_id).find_or_creat)
CartsProduct.find_or_create_by(cart_id: cart_id, product_id: product_id).update_attributes(amount:amount)
CartsProduct.find_or_create_by(cart_id: cart_id, product_id: product_id).update_attribute(amount:amount)
CartsProduct.find_or_create_by(cart_id: cart_id, product_id: product_id)
CartsProduct.find_or_create!(cart_id: cart_id, product_id: product_id)
Product.find_or_initialize_by(id: 1).update_attributes(description: 'juicy steak')
pp.save!
pp.amount = amount
pp = CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id})
pp = #<CartsProduct cart_id: 1, product_id: 4, amount: 0.3e1>
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id})
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id}).update_attributes(amount:amount)
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id})
pp.save!
pp.amount = amount
pp =  CartsProduct.create!(amount: amount, product_id: product_id, cart_id: cart_id)
pp.update_attributes(amount: amount)
pp = CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id})
pp = _
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id})
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id}).update_attributes!({amount: amount})
CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id}).update_attributes({amount: amount})
pp = CartsProduct.find_or_initialize_by({cart_id: cart_id, product_id: product_id}).update_attributes({amount: amount})
pp = CartsProduct.first_or_initialize({cart_id: cart_id, product_id: product_id}).update_attributes({amount: amount})
pp = CartsProduct.first_or_initialize(cart_id: cart_id, product_id: product_id).update({attributes: amount})
pp = CartsProduct.first_or_initialize(cart_id: cart_id, product_id: product_id).update(attributes: amount)
 CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id).update_attributes(amount: amount)
params
continue
pp.update_attributes(amount: amount)
pp
pp = CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: 1)
pp = CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id)
pp = CartsProduct.find_or_initialize(cart_id: cart_id, product_id: product_id)
CartsProduct.create!(cart_id: 1, product_id: 4, amount: 0.7e1)
pp.save!
pp
pp.exist?
pp.exists?
pp.present?
pp.present
pp.true?
pp.true
pp.save
pp
pp.save!
pp.amount = amount
pp.update_attributes({amount:amount})
pp.update_attributes!(amount: amount)
pp..update_attributes!(amount: amount)
pp.class
pp = CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id)
amount = params["amount"]
amount
   19:     amount = params["amount"]
 product_id = params["product_id"]
session[:cart_id]
c
c = CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id)
CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id).update_attributes!(amount: amount)
amount
CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id)
CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id).update_attributes!(amount: amount)
amount = params["amount"]
product_id = params["product_id"]
 CartsProduct.find_or_initialize_by(cart_id: cart_id, product_id: product_id).update_attributes!(amount: amount)
session[:cart_id]
session
continue
amount
CartsProduct.where(cart_id: cart_id, product_id: product_id).first_or_create(amount: amount)
amount
CartsProduct.where(cart_id: cart_id, product_id: product_id).first_or_create(amount: amount)
session[:cart_id]
session
session.save!
session[:cart_id] = 1
session[:cart_id]
session[:product_id]
CartsProduct.where(cart_id: cart_id, product_id: product_id).first_or_create(amount: amount)
continue
CartsProduct.where(cart_id: cart_id, product_id: product_id).first_or_create(amount: amount)
session[:cart_id] = 1
Cart.last
CartsProduct.where(cart_id: cart_id, product_id: product_id).first_or_create(amount: amount)
CartsProduct.first_or_create(cart_id: cart_id, product_id: product_id)
product_id
cart_id
CartsProduct.all
CartsProduct
cp
cp.save
CartsProduct.count
CartsProduct.last
cp.save!
cp
cp.save!
cp.amount = amount
cp
c
params
c
amount
c.amount = amount
CartsProduct.first_or_create(cart_id: cart_id, product_id: product_id)
c = CartsProduct.find_or_create(cart_id: cart_id, product_id: product_id)
 amount = params["amount"]
 product_id = Product.find(params["product_id"]).id
params
continue
params
continue
params
continue
params
continue
params
continue
params
exit
params
params["product_id"]
product_id = Product.find(params["product_id"]).id
continue
product_id = Product.find_by_uuid(params["product_id"]).id
continue
 product_id = Product.find_by_uuid(params["product_uuid"]).id
continue
session
continue
session
continue
session
continue
request.get?
continue
request.get?
continue
request.get?
continue
params
request.post?
exit
request.get?
params.post?
continue
params
continue
request.get?
continue
request.get?
continue
request.get?
params
continue
request.get?
params
exit
params
continue
params
continue
params
continue
params
continue
request.get?
params
continue
params
request.get?
request.post?
params
continue
request.post?
continue
request.post?
continue
request.get?
continue
request.post?
request.get?
continue
conntinue
request.post?
request.get?
params
continue
request.post?
request.get?
continue
request.post?
request.get?
continue
request.post?
request.get?
request.type
request
continue
request.get?
continue
request.params
request.header
header
request.post?
request.get?
exit
request.get?
request.post?
continue
params
continue
params["note"]
params
continue
request.post?
request.method
continue
request.method
continue
request.method
request.format.symbol
request.content_type
request.format
request.methods
request
request.post_request
request.post
params
continue
params
continue
params
continue
params
c
continue
params
continue
params
