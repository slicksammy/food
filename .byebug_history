continue
cart.carts_products
cart
continue
params
product_uuid
CartsProduct.find_or_create_by(cart_uuid: cart_uuid, product_uuid: product_uuid)
amount
continue
Cart.count
cart.id
continue
 products = cart.active_products
carts_products = cart.carts_products.count
carts_products = cart.carts_products
continue
cart.carts_products.first.destroy!
cart.carts_products.first
cart.carts_products.last
cart.carts_products.count
cart.carts_products
cart.active_products
        id: p.id,
      { 
products.map { |p|
cart.products
cart
products
        id: p.id,
      { 
products.map { |p|
 products = cart.active_products
cart.carts_products
cart
continue
reload
order.stripe_token
order.reload
order.stripe_token
order.save!
order.stripe_token
order
order.stripe_token =  options.default_stripe_token
options.default_stripe_token
continue
params[:order]
continue
params[:order]
continue
params
k.camelize.constantize.find_by_uuid v
k
obj
continue
order.address
continue
order
order.address
order.update_attributes!(address: Address.last)
order.reload
order
order.update_attributes!(address: Address.last)
order.reload
order
order.update_attributes(address: options.default_address)
order.address
order.reload
order.relaod
order.reload!
order
order.address
order
order.save!
order
order.stripe_token
order.address
continue
options.default_address
options
order.address
continue
Order.last.user
Address.last
@order
continue
@delivery_options
@delivery_dates
@payment_options
@address_options
@order
continue
session.destroy
cart_uuid
continue
session
continue
params[:order]
continue
order.address
order.update_attributes(address: obj)
order.address
order.address = 2
order.address
order.address=Address.last
order.address
order.reload
order.address
order.save!
order.address = obj
order.address
order.save!
order.send(:"#{k}=", obj)
k
obj
order.address
continue
order.address
order.save!
order.send(:"#{k}=",obj)
order.address
order.send(:"#{k}=",obj)
k
obj
order
continue
exit
order.address
order.save!
order.send(:"#{k}=",obj)
obj
order
obj.user == current_user
obj.user
continue
next
params[:order]
continue
session
continue
session
continue
request.fullpath
request.full_path
session
continue
session
sessions
session[:current_url]
current_url
request.headers["HTTP_REFERER"]
HTTP_REFERER
request.referrer
session.previous_url
continue
session.destroy
session.destroy!
continue
 session[:cart_uuid]
continue
session
continue
session[:cart_uuid] = 'dkkdkd'
session
continue
session
continue
session
continue
session[:cart_id] = 'aaaaa'
session
continue
cart_uuid
session
continue
session
continue
session.keys
session
continue
session
continue
session.keys
session[:product_uuid] = '1111'
session.keys
session
session.cart_uuid = '111'
session
continue
session
continue
session[:cart_uuid]
session
session[:cart_uuid] = '1111'
session
session.destroy
session.destroy!
session[:cart_id]
session
continue
session[:uuid] = '111'
session
